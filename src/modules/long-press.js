/* eslint-disable */
/*!
 * long-press-event - v2.2.1
 * Pure JavaScript long-press-event
 * https://github.com/john-doherty/long-press-event
 * @author John Doherty <www.johndoherty.info>
 * @license MIT
 */
!(function (e, t) {
  let n = null; const a = 'ontouchstart' in e || navigator.MaxTouchPoints > 0 || navigator.msMaxTouchPoints > 0; const i = a ? 'touchstart' : 'mousedown'; const o = a ? 'touchend' : 'mouseup'; const m = a ? 'touchmove' : 'mousemove'; let u = 0; let r = 0; const s = 10; const c = 10; function l(i) { v(i); const m = i.target; const u = parseInt(m.getAttribute('data-long-press-delay') || '1500', 10); n = (function (t, n) { if (!(e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame && e.mozCancelRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame)) return e.setTimeout(t, n); const a = (new Date()).getTime(); const i = {}; var o = function () { (new Date()).getTime() - a >= n ? t.call() : i.value = requestAnimFrame(o); }; return i.value = requestAnimFrame(o), i; }(function (e) { v(); const n = a ? e.touches[0].clientX : e.clientX; const i = a ? e.touches[0].clientY : e.clientY; this.dispatchEvent(new CustomEvent('long-press', { bubbles: !0, cancelable: !0, detail: { clientX: n, clientY: i } })) && t.addEventListener(o, function e(n) { t.removeEventListener(o, e, !0), (function (e) { e.stopImmediatePropagation(), e.preventDefault(), e.stopPropagation(); }(n)); }, !0); }.bind(m, i), u)); } function v(t) { let a; (a = n) && (e.cancelAnimationFrame ? e.cancelAnimationFrame(a.value) : e.webkitCancelAnimationFrame ? e.webkitCancelAnimationFrame(a.value) : e.webkitCancelRequestAnimationFrame ? e.webkitCancelRequestAnimationFrame(a.value) : e.mozCancelRequestAnimationFrame ? e.mozCancelRequestAnimationFrame(a.value) : e.oCancelRequestAnimationFrame ? e.oCancelRequestAnimationFrame(a.value) : e.msCancelRequestAnimationFrame ? e.msCancelRequestAnimationFrame(a.value) : clearTimeout(a)), n = null; } typeof e.CustomEvent !== 'function' && (e.CustomEvent = function (e, n) { n = n || { bubbles: !1, cancelable: !1, detail: void 0 }; const a = t.createEvent('CustomEvent'); return a.initCustomEvent(e, n.bubbles, n.cancelable, n.detail), a; }, e.CustomEvent.prototype = e.Event.prototype), e.requestAnimFrame = e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || function (t) { e.setTimeout(t, 1e3 / 60); }, t.addEventListener(o, v, !0), t.addEventListener(m, (e) => { const t = Math.abs(u - e.clientX); const n = Math.abs(r - e.clientY); (t >= s || n >= c) && v(); }, !0), t.addEventListener('wheel', v, !0), t.addEventListener('scroll', v, !0), t.addEventListener(i, (e) => { u = e.clientX, r = e.clientY, l(e); }, !0);
}(window, document));
